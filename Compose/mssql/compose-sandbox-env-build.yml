# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  nginx-sandbox:
    build:
      context: ../../Web-Gateway-Sandbox/Alpine
      dockerfile: Dockerfile
    environment:
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
      SANDBOX_ADMIN_VIRTUAL_NAME: "${SANDBOX_ADMIN_VIRTUAL_NAME:-admin}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway-sandbox
    restart: always
    hostname: nginx
    volumes:
      - ../../ssl:/ssl/
    depends_on:
      - api
      - sandbox-admin
      - swagger

  api:
    build:
      context: ../../Web-Ods-Api/Alpine/mssql
      dockerfile: Dockerfile
    environment:
      API_MODE: "Sandbox"
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      SQLSERVER_ODS_DATASOURCE: "${SQLSERVER_ODS_DATASOURCE:-host.docker.internal}"
      SQLSERVER_ADMIN_DATASOURCE: "${SQLSERVER_ADMIN_DATASOURCE:-host.docker.internal}"
      SQLSERVER_USER: "${SQLSERVER_USER}"
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      SQLSERVER_ENCRYPT: ${SQLSERVER_ENCRYPT:-false}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - sandbox-admin
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  sandbox-admin:
    build:
      context: ../../Web-Sandbox-Admin/Alpine/mssql
      dockerfile: Dockerfile
    environment:
      ADMIN_USER: "${ADMIN_USER}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      MINIMAL_KEY: "${MINIMAL_KEY}"
      MINIMAL_SECRET: "${MINIMAL_SECRET}"
      POPULATED_KEY: "${POPULATED_KEY}"
      POPULATED_SECRET: "${POPULATED_SECRET}"
      SQLSERVER_ODS_DATASOURCE: "${SQLSERVER_ODS_DATASOURCE:-host.docker.internal}"
      SQLSERVER_ADMIN_DATASOURCE: "${SQLSERVER_ADMIN_DATASOURCE:-host.docker.internal}"
      SQLSERVER_USER: "${SQLSERVER_USER}"
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD}"
      PathBase: "${SANDBOX_ADMIN_VIRTUAL_NAME:-admin}"
      OAuthUrl: "https://localhost/${ODS_VIRTUAL_NAME:-api}/oauth/"
      SANDBOX_HEALTHCHECK_TEST: ${SANDBOX_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      SQLSERVER_ENCRYPT: ${SQLSERVER_ENCRYPT:-false}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    restart: always
    hostname: admin
    container_name: ed-fi-sandbox-admin
    healthcheck:
      test: $$SANDBOX_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  swagger:
    build:
      context: ../../Web-SwaggerUI/Alpine
      dockerfile: Dockerfile
    environment:
      POPULATED_KEY: "${POPULATED_KEY}"
      POPULATED_SECRET: "${POPULATED_SECRET}"
      WebApiVersionUrl: "https://localhost/${ODS_VIRTUAL_NAME:-api}/"
      PathBase: "${DOCS_VIRTUAL_NAME:-docs}"
      SWAGGER_HEALTHCHECK_TEST: ${SWAGGER_HEALTHCHECK_TEST?Please consult env.example to set the SWAGGER healthcheck test}
    depends_on:
      - api
      - sandbox-admin
    restart: always
    hostname: swagger
    container_name: ed-fi-swagger
    healthcheck:
      test: $$SWAGGER_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3
