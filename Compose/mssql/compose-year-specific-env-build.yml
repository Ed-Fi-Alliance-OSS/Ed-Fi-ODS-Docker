# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  nginx:
    build:
      context: ../../Web-Gateway/Alpine
      dockerfile: Dockerfile
    environment:
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../ssl:/ssl/
    depends_on:
      - api
      - adminapp

  api:
    build:
      context: ../../Web-Ods-Api/Alpine/mssql
      dockerfile: Dockerfile
    environment:
      API_MODE: "YearSpecific"
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      SQLSERVER_ODS_DATASOURCE: "${SQLSERVER_ODS_DATASOURCE:-host.docker.internal}"
      SQLSERVER_ADMIN_DATASOURCE: "${SQLSERVER_ADMIN_DATASOURCE:-host.docker.internal}"
      SQLSERVER_USER: "${SQLSERVER_USER}"
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  adminapp:
    image: edfialliance/ods-admin-app-mssql:${ADMINAPP_TAG}
    environment:
      API_MODE: "YearSpecific"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      API_INTERNAL_URL: ${API_INTERNAL_URL?Please consult env.example to set the Api internal url}
      API_EXTERNAL_URL: ${API_EXTERNAL_URL?Please consult env.example to set the Api internal url}
      SQLSERVER_ODS_DATASOURCE: "${SQLSERVER_ODS_DATASOURCE:-host.docker.internal}"
      SQLSERVER_ADMIN_DATASOURCE: "${SQLSERVER_ADMIN_DATASOURCE:-host.docker.internal}"
      SQLSERVER_USER: "${SQLSERVER_USER}"
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD}"
      ADMINAPP_HEALTHCHECK_TEST: ${ADMINAPP_HEALTHCHECK_TEST?Please consult env.example to set the Admin App healthcheck test}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - adminapp-bulk-hashcache:/app/BulkUploadHashCache
      - ../../ssl:/ssl/
    depends_on:
      - api
    restart: always
    hostname: adminapp
    container_name: ed-fi-ods-adminapp
    healthcheck:
      test: $$ADMINAPP_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

volumes:
  adminapp-bulk-hashcache:
    driver: local
    name: vol-adminapp-bulk-hashcache
