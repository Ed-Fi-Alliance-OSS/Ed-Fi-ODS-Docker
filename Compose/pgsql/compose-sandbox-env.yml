# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  db-ods:
    image: edfialliance/ods-api-db-sandbox:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - vol-db-ods:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: "60s"
      retries: 3

  db-admin:
    image: edfialliance/ods-api-db-admin:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: "Sandbox"
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: "60s"
      retries: 3

  nginx:
    image: edfialliance/ods-api-web-gateway-sandbox:${TAG}
    environment:
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
      SANDBOX_ADMIN_VIRTUAL_NAME: "${SANDBOX_ADMIN_VIRTUAL_NAME:-admin}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../ssl:/ssl/
    depends_on:
      - api
      - admin
      - swagger

  api:
    image: edfialliance/ods-api-web-api:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      API_MODE: "Sandbox"
      ODS_POSTGRES_HOST: pb-ods
      ADMIN_POSTGRES_HOST: pb-admin
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-ods
      - pb-admin
      - admin
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  admin:
    image: edfialliance/ods-api-web-sandbox-admin:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ADMIN_USER: "${ADMIN_USER}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      MINIMAL_KEY: "${MINIMAL_KEY}"
      MINIMAL_SECRET: "${MINIMAL_SECRET}"
      POPULATED_KEY: "${POPULATED_KEY}"
      POPULATED_SECRET: "${POPULATED_SECRET}"
      ODS_POSTGRES_HOST: pb-ods
      ADMIN_POSTGRES_HOST: pb-admin
      PathBase: "${SANDBOX_ADMIN_VIRTUAL_NAME:-admin}"
      OAuthUrl: "https://localhost/${ODS_VIRTUAL_NAME:-api}/oauth/"
      SANDBOX_HEALTHCHECK_TEST: ${SANDBOX_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-ods
      - pb-admin
    restart: always
    hostname: admin
    container_name: ed-fi-sandbox-admin
    healthcheck:
      test: $$SANDBOX_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  swagger:
    image: edfialliance/ods-api-web-swaggerui:${TAG}
    environment:
      POPULATED_KEY: "${POPULATED_KEY}"
      POPULATED_SECRET: "${POPULATED_SECRET}"
      WebApiVersionUrl: "https://localhost/${ODS_VIRTUAL_NAME:-api}/"
      PathBase: "${DOCS_VIRTUAL_NAME:-docs}"
      SWAGGER_HEALTHCHECK_TEST: ${SWAGGER_HEALTHCHECK_TEST?Please consult env.example to set the SWAGGER healthcheck test}
    depends_on:
      - api
      - admin
      - pb-ods
      - pb-admin
    restart: always
    hostname: swagger
    container_name: ed-fi-swagger
    healthcheck:
      test: $$SWAGGER_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  pb-admin:
    image: pgbouncer/pgbouncer
    environment:
      DATABASES: "* = host = db-admin port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}"
      PGBOUNCER_LISTEN_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      QUIET: ${PGBOUNCER_QUIET}
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin
    depends_on:
      - db-admin

  pb-ods:
    image: pgbouncer/pgbouncer
    environment:
      DATABASES: "* = host = db-ods port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}"
      PGBOUNCER_LISTEN_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      QUIET: ${PGBOUNCER_QUIET}
    ports:
      - "5402:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-ods
    depends_on:
      - db-ods

volumes:
  vol-db-admin:
    driver: local
    name: vol-db-admin
  vol-db-ods:
    driver: local
    name: vol-db-ods
