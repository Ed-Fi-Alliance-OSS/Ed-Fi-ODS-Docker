# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  db-admin:
    build:
      context: ../../DB-Admin/Alpine/pgsql
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: YearSpecific
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  nginx:
    build:
      context: ../../Web-Gateway/Alpine
      dockerfile: Dockerfile
    environment:
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../ssl:/ssl/
    depends_on:
      - api
      - adminapp

  api:
    build:
      context: ../../Web-Ods-Api/Alpine/pgsql
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: EdFi_{0}
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: YearSpecific
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      ODS_WAIT_POSTGRES_HOSTS: "EdFi_Ods_2022 EdFi_Ods_2023 "
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-false}"
      NPG_API_MAX_POOL_SIZE_ODS: "${NPG_API_MAX_POOL_SIZE_ODS}"
      NPG_API_MAX_POOL_SIZE_ADMIN: "${NPG_API_MAX_POOL_SIZE_ADMIN}"
      NPG_API_MAX_POOL_SIZE_SECURITY: "${NPG_API_MAX_POOL_SIZE_SECURITY}"
      NPG_API_MAX_POOL_SIZE_MASTER: "${NPG_API_MAX_POOL_SIZE_MASTER}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-admin
      - edfi_ods_2022
      - edfi_ods_2023
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3


  db-ods-2022:
    build:
      context: ../../DB-ODS/Alpine/pgsql
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      ODS_DB: "EdFi_Ods_2022"
    volumes:
      - vol-db-ods-2022:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods-2022
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  edfi_ods_2022:
    image: bitnami/pgbouncer
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-ods-2022
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
    ports:
      - "5402:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-ods-2022
    depends_on:
      - db-ods-2022

  db-ods-2023:
    build:
      context: ../../DB-ODS/Alpine/pgsql
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      ODS_DB: "EdFi_Ods_2023"
    volumes:
      - vol-db-ods-2023:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods-2023
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  edfi_ods_2023:
    image: bitnami/pgbouncer
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-ods-2023
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
    ports:
      - "5403:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-ods-2023
    depends_on:
      - db-ods-2023

  adminapp:
    image: edfialliance/ods-admin-app:${ADMINAPP_TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: EdFi_{0}
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: YearSpecific
      API_EXTERNAL_URL: "https://${API_HOSTNAME:-localhost}/${ODS_VIRTUAL_NAME:-api}"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      API_INTERNAL_URL: ${API_INTERNAL_URL?Please consult env.example to set the Api internal url}
      ADMINAPP_HEALTHCHECK_TEST: ${ADMINAPP_HEALTHCHECK_TEST?Please consult env.example to set the Admin App healthcheck test}
      ODS_WAIT_POSTGRES_HOSTS: "EdFi_Ods_2022 EdFi_Ods_2023 "
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-false}"
      NPG_ADMIN_MAX_POOL_SIZE_ODS: "${NPG_ADMIN_MAX_POOL_SIZE_ODS}"
      NPG_ADMIN_MAX_POOL_SIZE_ADMIN: "${NPG_ADMIN_MAX_POOL_SIZE_ADMIN}"
      NPG_ADMIN_MAX_POOL_SIZE_SECURITY: "${NPG_ADMIN_MAX_POOL_SIZE_SECURITY}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - adminapp-bulk-hashcache:/app/BulkUploadHashCache
      - ../../ssl:/ssl/
    depends_on:
      - pb-admin
      - api
      - edfi_ods_2022
      - edfi_ods_2023
    restart: always
    hostname: adminapp
    container_name: ed-fi-ods-adminapp
    healthcheck:
      test: $$ADMINAPP_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  pb-admin:
    image: bitnami/pgbouncer
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-admin
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin
    depends_on:
      - db-admin

volumes:
  vol-db-admin:
    driver: local
    name: vol-db-admin
  adminapp-bulk-hashcache:
    driver: local
    name: vol-adminapp-bulk-hashcache
  vol-db-ods-2022:
    driver: local
    name: vol-db-ods-2022
  vol-db-ods-2023:
    driver: local
    name: vol-db-ods-2023
