# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
{{#tenants}}
{{#tokens}}
  db-ods-{{tenantId}}-{{token}}:
    image: edfialliance/ods-api-db-ods-minimal:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - vol-db-ods-{{tenantId}}-{{token}}:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods-{{tenantId}}-{{token}}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  pb-ods-{{tenantId}}-{{token}}:
    image: bitnami/pgbouncer:1.20.0
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-ods-{{tenantId}}-{{token}}
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
    restart: always
    container_name: ed-fi-pb-ods-{{tenantId}}-{{token}}
    depends_on:
      - db-ods-{{tenantId}}-{{token}}

{{/tokens}}
  db-admin-{{tenantId}}:
    image: "${ADMIN_DB_IMAGE:-edfialliance/ods-api-db-admin:${TAG}}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ODS_PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-false}"
      NPG_API_MAX_POOL_SIZE_ODS: "${NPG_API_MAX_POOL_SIZE_ODS}"
      TENANT_IDENTIFIER: {{tenantId}}
      ODS_POSTGRES_TOKENS: "{{#tokens}}{{token}} {{/tokens}}"
      CONTEXT_KEY: "{{contextKey}}"
    volumes:
      - vol-db-admin-{{tenantId}}:/var/lib/postgresql/data
      - ./bootstrap.sh:/docker-entrypoint-initdb.d/2-bootstrap.sh
    restart: always
    container_name: ed-fi-db-admin-{{tenantId}}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  pb-admin-{{tenantId}}:
    image: bitnami/pgbouncer:1.20.0
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-admin-{{tenantId}}
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
    restart: always
    container_name: ed-fi-pb-admin-{{tenantId}}
    depends_on:
      - db-admin-{{tenantId}}

{{/tenants}}
  nginx:
    image: edfialliance/ods-api-web-gateway:${GATEWAY_TAG}
    environment:
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
      ADMIN_API_VIRTUAL_NAME: "${ADMIN_API_VIRTUAL_NAME:-adminapi}"
    ports:
      - "443:443"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../../ssl:/ssl/
    depends_on:
      - api
      - adminapi

  api:
    image: edfialliance/ods-api-web-api:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      PATH_BASE: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      ODS_WAIT_POSTGRES_HOSTS: "{{#tenants}}{{#tokens}}pb-ods-{{tenantId}}-{{token}} {{/tokens}}{{/tenants}}"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-false}"
      NPG_API_MAX_POOL_SIZE_ODS: "${NPG_API_MAX_POOL_SIZE_ODS}"
      NPG_API_MAX_POOL_SIZE_ADMIN: "${NPG_API_MAX_POOL_SIZE_ADMIN}"
      NPG_API_MAX_POOL_SIZE_SECURITY: "${NPG_API_MAX_POOL_SIZE_SECURITY}"
      NPG_API_MAX_POOL_SIZE_MASTER: "${NPG_API_MAX_POOL_SIZE_MASTER}"
      ODS_CONNECTION_STRING_ENCRYPTION_KEY: "${ODS_CONNECTION_STRING_ENCRYPTION_KEY}"
      ASPNETCORE_ENVIRONMENT: "docker"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - ./appsettings.dockertemplate.json:/app/appsettings.dockertemplate.json
    entrypoint: ["/bin/sh"]
    command: ["-c","envsubst < /app/appsettings.dockertemplate.json > /app/appsettings.docker.json && /app/run.sh"]
    depends_on:
{{#tenants}}
      - pb-admin-{{tenantId}}
{{#tokens}}
      - pb-ods-{{tenantId}}-{{token}}
{{/tokens}}
{{/tenants}}
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  adminapi:
    image: edfialliance/ods-admin-api:${ADMINAPI_TAG}
    environment:
      ADMIN_WAIT_POSTGRES_HOSTS: "{{#tenants}}pb-admin-{{tenantId}} {{/tenants}}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DATABASEENGINE: "PostgreSql"
      AUTHORITY: ${AUTHORITY}
      ISSUER_URL: ${ISSUER_URL}
      SIGNING_KEY: ${SIGNING_KEY}
      ADMIN_API_VIRTUAL_NAME: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
      AppSettings__DefaultPageSizeOffset: ${PAGING_OFFSET:-0}
      AppSettings__DefaultPageSizeLimit: ${PAGING_LIMIT:-25}
      AppSettings__MultiTenancy: "${MULTITENANCY_ENABLED:-true}"
      ASPNETCORE_ENVIRONMENT: "multitenantdocker"
      Authentication__AllowRegistration: "true"
      SwaggerSettings__EnableSwagger: "true"
      SwaggerSettings__DefaultTenant: ${SWAGGER_DEFAULT_TENANT:-tenant1}
    volumes:
      - ./appsettings.dockertemplate.json:/app/appsettings.dockertemplate.json
    entrypoint: ["/bin/sh"]
    command: ["-c","envsubst < /app/appsettings.dockertemplate.json > /app/appsettings.multitenantdocker.json && /app/run.sh"]
    depends_on:
    {{#tenants}}
      - pb-admin-{{tenantId}}
    {{/tenants}}
    restart: always
    hostname: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
    container_name: ed-fi-adminapi
    healthcheck:
      test: ${ADMIN_API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

volumes:
{{#tenants}}
  vol-db-admin-{{tenantId}}:
    driver: local
    name: vol-db-admin-{{tenantId}}
{{/tenants}}
{{#tenants}}
{{#tokens}}
  vol-db-ods-{{tenantId}}-{{token}}:
    driver: local
    name: vol-db-ods-{{tenantId}}-{{token}}
{{/tokens}}
{{/tenants}}
