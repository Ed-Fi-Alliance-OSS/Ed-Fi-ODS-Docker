# PgBouncer Setting to prevent passwords from being printed to logs (leave value blank to see Database values including username and password)
PGBOUNCER_QUIET=""
ODS_VIRTUAL_NAME=api
ADMIN_USER=semalai
ADMIN_PASSWORD=test123
LOGS_FOLDER=../logs
MINIMAL_KEY=minimal
MINIMAL_SECRET=test123
#PGBOUNCER_LISTEN_PORT=6432
POPULATED_KEY=populated
POPULATED_SECRET=test123
POSTGRES_USER=postgres
POSTGRES_PASSWORD=test123
TAG=v1.1.0

#NPG_API_MAX_POOL_SIZE_ADMIN=20
#NPG_API_MAX_POOL_SIZE_SECURITY=20
#NPG_API_MAX_POOL_SIZE_MASTER=20
#
#NPG_SANDBOX_MAX_POOL_SIZE_ODS=20
#NPG_SANDBOX_MAX_POOL_SIZE_ADMIN=20
#NPG_SANDBOX_MAX_POOL_SIZE_SECURITY=20
#NPG_SANDBOX_MAX_POOL_SIZE_MASTER=20
#
#NPG_ADMIN_MAX_POOL_SIZE_ODS=20
#NPG_ADMIN_MAX_POOL_SIZE_ADMIN=20
#NPG_ADMIN_MAX_POOL_SIZE_SECURITY=20

#TPDM_ENABLED=<enables the TPDM plugin (default: true)>

# The following is only needed for Admin App
APP_VIRTUAL_NAME=adminapp
API_HOSTNAME=localhost
ENCRYPTION_KEY="dCr7uqzR4UOpYLEDDF9qaHODJ2UvG4vcweGfvoEA6SE="
ADMINAPP_VIRTUAL_NAME=adminapp
# For SQL Server only
#SQLSERVER_ODS_DATASOURCE=<DNS or IP Address of the SQL Server Instance, i.e. sql.somedns.org or 10.1.5.9,1433
#SQLSERVER_ADMIN_DATASOURCE=<DNS or IP Address of the SQL Server Instance that contains the Admin/Security/Master databases, i.e. sql.somedns.org or 10.1.5.9,1433>
SQLSERVER_USER=sa
SQLSERVER_PASSWORD=test123

# The following needs to be set to specify a healthcheck test for admin app.
# RECOMMENDED: To use the default internal Admin App healthcheck endpoint, set the variable as follows:
#ADMINAPP_HEALTHCHECK_TEST="curl -f http://${ADMINAPP_VIRTUAL_NAME}/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
ADMINAPP_HEALTHCHECK_TEST=/bin/true
#  To add a custom health check, consult the documentation at https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck

# The following needs to be set to specify the ODS API endpoint for admin app to internally connect.
# If user chooses direct connection between ODS API and admin app within docker network, then set the api internal url as follows
API_INTERNAL_URL = http://${ODS_VIRTUAL_NAME}
# If user wants to connect to ODS API from admin app through reverse proxy(nginx = our gateway name), then please follow the steps below.
# STEP 1: Update the CA certificate to include subjectAltName = DNS:nginx, Please refer https://techdocs.ed-fi.org/display/EDFITOOLS/Docker+Deployment#DockerDeployment-Step4.ProvideSSLcertificate for more details.
# STEP 2: After the CA certificate update, the api internal url can be set as follows
# API_INTERNAL_URL = https://nginx/${ODS_VIRTUAL_NAME}



API_HEALTHCHECK_TEST="curl -f http://localhost/health"

SANDBOX_ADMIN_VIRTUAL_NAME=admin
SANDBOX_HEALTHCHECK_TEST="curl -f http://localhost/health"

DOCS_VIRTUAL_NAME=docs
SWAGGER_HEALTHCHECK_TEST="curl -f http://localhost/health"

#NPG_POOLING_ENABLED=true
#NPG_API_MAX_POOL_SIZE_ODS=20