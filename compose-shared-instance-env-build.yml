# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: '3.8'

services:
  db-ods:
    build:
      context: ./DB-Ods
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5402:5432"
    volumes:
      -  pg-db-ods:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods

  db-admin:
    build:
      context: ./DB-Admin
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: "SharedInstance"
    ports:
      - "5401:5432"
    volumes:
      -  pg-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin

  nginx:
     build:
       context: ./Web-Gateway
       dockerfile: Dockerfile
     ports:
       - "5001:5001"
       - "5002:5002"
     container_name: ed-fi-gateway
     restart: always
     hostname: nginx
     volumes:
        - ./Web-Gateway/nginx.conf:/etc/nginx/nginx.conf
        - ./Web-Gateway/ssl:/ssl/
     depends_on:
        - api
        - adminapp

  api:
    build:
      context: ./Web-Ods-Api
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ODS_DB: db-ods
      ADMIN_DB: db-admin
      API_MODE: "SharedInstance"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
       - db-ods
       - db-admin
    restart: always
    hostname: api
    container_name: ed-fi-ods

  adminapp:
    build:
      context: ./Web-Ods-AdminApp
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ODS_DB: db-ods
      ADMIN_DB: db-admin
      API_MODE: "SharedInstance"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - adminapp-bulk-hashcache:/app/BulkUploadHashCache
    depends_on:
       - db-ods
       - db-admin
       - api
    restart: always
    hostname: adminapp
    container_name: ed-fi-ods-adminapp

volumes:
  pg-db-admin:
    driver: local
    name: vol-pg-admin
  pg-db-ods:
    driver: local
    name: vol-pg-ods
  adminapp-bulk-hashcache:
    driver: local
    name: vol-adminapp-bulk-hashcache
