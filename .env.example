# This is the tagged docker images you will pull
TAG=<image tag version>

# Local disk folder where log file volumns are mapped
LOGS_FOLDER=<path to store the log files>

# Hard coded credentials to access the admin app, use this to add more creds for others
ADMIN_USER=<default admin user for sandbox admin>
ADMIN_PASSWORD=<default password for the sandbox admin user>

# Used by admin app
ENCRYPTION_KEY=<base64-encoded 256-bit key>

# Default API credentials for the sandbox minimal template DB
MINIMAL_KEY=<minimal template key>
MINIMAL_SECRET=<minimal template secret>

# Default API credentials for the sandbox populated template DB
POPULATED_KEY=<populated template key>
POPULATED_SECRET=<populated template secret>

# Credentials used to authenticate to Postgres DB,  only needed if using Postgres DB
POSTGRES_USER=<default postgres database user>
POSTGRES_PASSWORD=<password for default postgres user>

# Port PgBouncer listens on, only needed if using Postgres DB, defaults to 6432
# PGBOUNCER_LISTEN_PORT=<port for pg bouncer to listen to>

# NOTE - By default, PgBouncer logs the configuration file which contains sensitive information such as the host database username and password.
# The following configuration variable PGBOUNCER_QUIET="true" which will suppress this messaging.
PGBOUNCER_QUIET="true"

# PostgreSQL client-side pooling. Consider only if not using PgBouncer (see repository README file for additional information)
# NPG_POOLING_ENABLED=<Enables or disables client-side pooling (default: false)>
# NPG_API_MAX_POOL_SIZE_ODS=<The maximum number of connections for each distinct ODS database from each Ed-Fi ODS API container.>
# NPG_API_MAX_POOL_SIZE_ADMIN=<The maximum number of connections for the EdFi_Admin database from each Ed-Fi ODS API container.>
# NPG_API_MAX_POOL_SIZE_SECURITY=<The maximum number of connections for the EdFi_Security database from each Ed-Fi ODS API container.>
# NPG_API_MAX_POOL_SIZE_MASTER=<The maximum number of connections for the 'postgres' default database from each Ed-Fi ODS API container.>
# NPG_ADMIN_MAX_POOL_SIZE_ODS=<The maximum number of connections for each distinct ODS database from each Admin App container.>
# NPG_ADMIN_MAX_POOL_SIZE_ADMIN=<The maximum number of connections for the EdFi_Admin database from each Admin App container.>
# NPG_ADMIN_MAX_POOL_SIZE_SECURITY=<The maximum number of connections for the EdFi_Security database from each Admin App container.>
# NPG_SANDBOX_MAX_POOL_SIZE_ODS=<The maximum number of connections for each distinct ODS database from each Ed-Fi Sandbox Admin container.>
# NPG_SANDBOX_MAX_POOL_SIZE_ADMIN=<The maximum number of connections for the EdFi_Admin database from each Ed-Fi Sandbox Admin container.>
# NPG_SANDBOX_MAX_POOL_SIZE_SECURITY=<The maximum number of connections for the EdFi_Security database from each Ed-Fi Sandbox Admin container.>
# NPG_SANDBOX_MAX_POOL_SIZE_MASTER=<The maximum number of connections for the 'postgres' default database from each Ed-Fi Sandbox Admin container.>

# For SQL Server only
# SQLSERVER_ODS_DATASOURCE=<DNS or IP Address of the SQL Server Instance, i.e. sql.somedns.org or 10.1.5.9,1433>
# SQLSERVER_ADMIN_DATASOURCE=<DNS or IP Address of the SQL Server Instance that contains the Admin/Security/Master databases, i.e. sql.somedns.org or 10.1.5.9,1433>
# SQLSERVER_USER=<SQL Username with access to SQL Server Ed-Fi databases, edfiadmin>
# SQLSERVER_PASSWORD=<SQL Password for the SQLSERVER_USER with access to SQL Server Ed-Fi databases, password123!>

# The hostname of the main API, defaults to 'localhost', used to define the api's url
# API_HOSTNAME=<ods api hostname>

# The url path to the api, the default is 'api', used to define the api's url
# ODS_VIRTUAL_NAME=<virtual name for the ods endpoint>

# The url path for the Sandbox Admin app, the default is 'admin'
# SANDBOX_ADMIN_VIRTUAL_NAME=<virtual name for the sandbox admin endpoint>

# Enables or disables the TPDM module: https://www.ed-fi.org/teacher-prep-data-model/
# TPDM_ENABLED=<enables the TPDM plugin (default: true)>

# The url path to the admin app, the default is 'adminapp', only used by admin app.
# ADMINAPP_VIRTUAL_NAME=<virtual name for the admin app endpoint>

# The url path to swagger, the default is 'docs'
# DOCS_VIRTUAL_NAME=<virtual name for the swagger endpoint>

# The following needs to be set to specify a healthcheck test for admin app.
# RECOMMENDED: To use the default internal Admin App healthcheck endpoint, set the variable as follows:
ADMINAPP_HEALTHCHECK_TEST="curl -f http://localhost/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
# ADMINAPP_HEALTHCHECK_TEST=/bin/true
#  To add a custom health check, consult the documentation at https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck

# The following needs to be set to specify a healthcheck test for the API
# RECOMMENDED: To use the default internal API healthcheck endpoint, set the variable as follows:
API_HEALTHCHECK_TEST="curl -f http://localhost/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
# API_HEALTHCHECK_TEST=/bin/true

# The following needs to be set to specify a healthcheck test for the Sandbox Admin
# RECOMMENDED: To use the default internal Sandbox Admin healthcheck endpoint, set the variable as follows:
SANDBOX_HEALTHCHECK_TEST="curl -f http://localhost/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
# SANDBOX_HEALTHCHECK_TEST=/bin/true

# The following needs to be set to specify a healthcheck test for Swagger
# RECOMMENDED: To use the default internal Swagger healthcheck endpoint, set the variable as follows:
SWAGGER_HEALTHCHECK_TEST="curl -f http://localhost/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
# SWAGGER_HEALTHCHECK_TEST=/bin/true

# The following needs to be set to specify the ODS API endpoint for admin app to internally connect to the API.
# If you choose direct connection within the docker network between the ODS API and the admin app, then set the api internal url as follows:
API_INTERNAL_URL=http://${ODS_VIRTUAL_NAME}
# If you want to connect to ODS API from the admin app through a reverse proxy(nginx = our reverse proxy gateway name), then please follow the steps below.
# STEP 1: Update the CA certificate to include subjectAltName = DNS:nginx, Please refer https://techdocs.ed-fi.org/display/EDFITOOLS/Docker+Deployment#DockerDeployment-Step4.ProvideSSLcertificate for more details.
# STEP 2: After the CA certificate update, the api internal url can be set as follows
# API_INTERNAL_URL = https://nginx/${ODS_VIRTUAL_NAME}
