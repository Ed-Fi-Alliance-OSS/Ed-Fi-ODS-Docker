ADMIN_USER=<default admin user for sandbox admin>
ADMIN_PASSWORD=<default password for the sandbox admin user>
LOGS_FOLDER=<path to store the log files>
MINIMAL_KEY=<minimal template key>
MINIMAL_SECRET=<minimal template secret>
PGBOUNCER_LISTEN_PORT=<port for pg bouncer to listen to>
POPULATED_KEY=<populated template key>
POPULATED_SECRET=<populated template secret>
POSTGRES_USER=<default postgres database user>
POSTGRES_PASSWORD=<password for default postgres user>
TAG=<image tag version>
ADMINAPP_TAG=<Admin App image tag>
ODS_VIRTUAL_NAME=<virtual name for the ods endpoint>
SANDBOX_ADMIN_VIRTUAL_NAME=<virtual name for the sandbox admin endpoint>
TPDM_ENABLED=<enables the TPDM plugin (default: true)>

# The following is only needed for Admin App
ADMINAPP_VIRTUAL_NAME=<virtual name for the admin app endpoint>
API_HOSTNAME=<ods api hostname>
ENCRYPTION_KEY=<base64-encoded 256-bit key>

# For SQL Server only
SQLSERVER_ODS_DATASOURCE=<DNS or IP Address of the SQL Server Instance, i.e. sql.somedns.org or 10.1.5.9,1433
SQLSERVER_ADMIN_DATASOURCE=<DNS or IP Address of the SQL Server Instance that contains the Admin/Security/Master databases, i.e. sql.somedns.org or 10.1.5.9,1433>
SQLSERVER_USER=<SQL Username with access to SQL Server Ed-Fi databases, edfiadmin>
SQLSERVER_PASSWORD=<SQL Password for the SQLSERVER_USER with access to SQL Server Ed-Fi databases, password123!>

# The following needs to be set to specify a healthcheck test for admin app.
# RECOMMENDED: To use the default internal Admin App healthcheck endpoint, set the variable as follows:
ADMINAPP_HEALTHCHECK_TEST="curl -f http://${ADMINAPP_VIRTUAL_NAME}/health"
#  To disable the healthcheck, remove the above and instead set the variable as follows:
# ADMINAPP_HEALTHCHECK_TEST=/bin/true
#  To add a custom health check, consult the documentation at https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck

# The following needs to be set to specify the ODS API endpoint for admin app to internally connect.
# If user chooses direct connection between ODS API and admin app within docker network, then set the api internal url as follows
API_INTERNAL_URL = http://${ODS_VIRTUAL_NAME}
API_EXTERNAL_URL=https://${API_HOSTNAME:-localhost}/${ODS_VIRTUAL_NAME:-api}
# If user wants to connect to ODS API from admin app through reverse proxy(nginx = our gateway name), then please follow the steps below.
# STEP 1: Update the CA certificate to include subjectAltName = DNS:nginx, Please refer https://techdocs.ed-fi.org/display/EDFITOOLS/Docker+Deployment#DockerDeployment-Step4.ProvideSSLcertificate for more details.
# STEP 2: After the CA certificate update, the api internal url can be set as follows
# API_INTERNAL_URL = https://nginx/${ODS_VIRTUAL_NAME}
